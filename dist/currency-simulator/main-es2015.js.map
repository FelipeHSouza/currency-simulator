{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/interceptors/api-prefix.interceptor.ts","./src/app/core/services/api-currency.service.ts","./src/app/modules/site/pages/cambio/cambio.component.html","./src/app/modules/site/pages/cambio/cambio.component.ts","./src/app/modules/site/site-rounting.module.ts","./src/app/modules/site/site.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n    CommonModule\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<router-outlet></router-outlet>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'currency-simulator';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { SiteRoutingModule } from './modules/site/site-rounting.module';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { ApiPrefix } from './core/interceptors/api-prefix.interceptor';\nimport { SiteModule } from './modules/site/site.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    SiteRoutingModule,\n    CoreModule,\n    SiteModule\n  ],\n  exports: [\n\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiPrefix,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ApiPrefix } from './interceptors/api-prefix.interceptor';\n\n@NgModule({\n    imports: [\n      CommonModule,\n      RouterModule\n    ],\n    exports: [],\n    providers: [\n      \n    ],\n    declarations: []\n  })\n  export class CoreModule { }\n  ","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ApiPrefix implements HttpInterceptor {\n    intercept(\n        req: HttpRequest<any>,\n        next: HttpHandler,\n    ): Observable<HttpEvent<any>> {\n        const dupReq = req.clone({});\n        return next.handle(dupReq);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment'\nimport { Cambio } from '../models/cambio';\nimport { ConverterMoedasResult } from '../models/result/converter-moedas-result.component';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiCurrencyService {\n  cambio: Cambio\n\n  constructor(private http: HttpClient) { }\n\n  converterMoedas(moedaOrigem: string, moedaDestino: string): Observable<ConverterMoedasResult> {\n    return this.http.get<ConverterMoedasResult>(\n      `${environment.apiCurrencyEnpoint+moedaOrigem}_${moedaDestino}&compact=ultra&apiKey=${environment.apiCurrencyKey}`\n    )\n  }\n}\n","<table>\n    <tr>\n        <th>MOEDA ORIGEM</th>\n        <th>MOEDA DESTINO</th>\n        <th>VALOR</th>\n    </tr>\n    <tr>\n        <td>{{cambio?.moedaOrigem}}</td>\n        <td>{{cambio?.moedaDestino}}</td>\n        <td>{{cambio?.valor | currency: 'BRL'}}</td>\n    </tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { ApiCurrencyService } from 'src/app/core/services/api-currency.service';\nimport { Cambio } from 'src/app/core/models/cambio';\nimport { map } from 'rxjs/operators'\n\n@Component({\n  selector: 'app-cambio',\n  templateUrl: './cambio.component.html',\n  styleUrls: ['./cambio.component.scss']\n})\nexport class CambioComponent implements OnInit {\n  cambio: Cambio;\n\n  constructor(\n    public apiCurrency: ApiCurrencyService\n  ) { }\n\n  ngOnInit(): void {\n    this.converterMoedas('BRL', 'USD')\n  }\n\n  // converterMoedas(moedaOrigem: string, moedaDestino: string): void{\n  //   this.apiCurrency.converterMoedas(moedaOrigem, moedaDestino).subscribe(\n  //     res => {\n  //       console.log(res)\n  //     }\n  //   )\n  // }\n\n  converterMoedas(moedaOrigem: string, moedaDestino: string): void {\n    this.apiCurrency.converterMoedas(moedaOrigem, moedaDestino).pipe(\n      map(res => (\n        {\n          moedaOrigem: moedaOrigem,\n          moedaDestino: moedaDestino,\n          valor: res.BRL_USD\n        }\n      ))\n    ).subscribe(\n      item => {\n        console.log(item)\n        this.cambio = item\n      }\n    )\n  }\n}","import { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ApiPrefix } from 'src/app/core/interceptors/api-prefix.interceptor';\nimport { CambioComponent } from './pages/cambio/cambio.component';\n\nconst routes: Routes = [{\n    path: 'cambio', component: CambioComponent\n}];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes),\n        CommonModule\n    ],\n    exports: [RouterModule],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: ApiPrefix,\n            multi: true\n        }\n    ]\n})\nexport class SiteRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { SiteRoutingModule } from './site-rounting.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ApiPrefix } from 'src/app/core/interceptors/api-prefix.interceptor';\nimport { CambioComponent } from './pages/cambio/cambio.component';\n\n@NgModule({\n  declarations: [\n    CambioComponent\n  ],\n  imports: [\n    BrowserModule,\n    SiteRoutingModule\n  ],\n  exports: [\n\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiPrefix,\n      multi: true\n    }\n  ],\n  bootstrap: []\n})\n\nexport class SiteModule { }","export const environment = {\n  production: false,\n  apiCurrencyEnpoint: 'https://free.currconv.com/api/v7/convert?q=',\n  apiCurrencyKey: '766560c6f4db43a534db',\n  apiTeste: 'https://free.currconv.com/api/v7/convert?q=USD_BRL&compact=ultra&apiKey=766560c6f4db43a534db'\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}