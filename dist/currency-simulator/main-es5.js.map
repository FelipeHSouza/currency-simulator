{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/interceptors/api-prefix.interceptor.ts","webpack:///src/app/core/services/api-currency.service.ts","webpack:///src/app/modules/site/pages/cambio/cambio.component.html","webpack:///src/app/modules/site/pages/cambio/cambio.component.ts","webpack:///src/app/modules/site/site-rounting.module.ts","webpack:///src/app/modules/site/site.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","AppComponent","title","AppModule","CoreModule","ApiPrefix","next","dupReq","clone","handle","ApiCurrencyService","http","moedaOrigem","moedaDestino","get","apiCurrencyEnpoint","apiCurrencyKey","CambioComponent","apiCurrency","converterMoedas","pipe","res","valor","BRL_USD","subscribe","item","console","log","cambio","path","component","SiteRoutingModule","SiteModule","environment","production","apiTeste","catch","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACPA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,QAAMC,MAAM,GAAW,EAAvB;;QASaC,gB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qECdb,yI,GAAA,8a,GAAA;AAAA;AAAe,O,EAAA,I;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,oBAAR;AACD,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC0BD;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,S;;;;;;;;;;;;;;;;;;;AClBX;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,U;;;;;;;;;;;;;;;;;;;ACZf;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,S;;;;;;;;;kCAELjB,G,EACAkB,I,EAAiB;AAEjB,cAAMC,MAAM,GAAGnB,GAAG,CAACoB,KAAJ,CAAU,EAAV,CAAf;AACA,iBAAOF,IAAI,CAACG,MAAL,CAAYF,MAAZ,CAAP;AACH;;;;;;;;;;;;;;;;;;;;;ACTL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaG,kB;;;AAGX,kCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;wCAEzBC,W,EAAqBC,Y,EAAoB;AACvD,iBAAO,KAAKF,IAAL,CAAUG,GAAV,WACF,yEAAYC,kBAAZ,GAA+BH,WAD7B,cAC4CC,YAD5C,mCACiF,yEAAYG,cAD7F,EAAP;AAGD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0TCrBH,2H,IACI,uH,IACI,uH,IAAI,sF,IACJ,uH,IAAI,uF,IACJ,uH,IAAI,+E,IAER,uH,IACI,wH,IAAI,8E,IACJ,wH,IAAI,8E,IACJ,wH,IAAI,8E,GAAA,yD,GAAmC,I,EAAA;AAAA;AAFnC;;AAAA;;AACA;;AAAA;;AACA;;AAAA;AAAmC,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN/C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,e;;;AAGX,+BACSC,WADT,EACwC;AAAA;;AAA/B,aAAAA,WAAA,GAAAA,WAAA;AACJ;;;;mCAEG;AACN,eAAKC,eAAL,CAAqB,KAArB,EAA4B,KAA5B;AACD,S,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;;;wCAEgBP,W,EAAqBC,Y,EAAoB;AAAA;;AACvD,eAAKK,WAAL,CAAiBC,eAAjB,CAAiCP,WAAjC,EAA8CC,YAA9C,EAA4DO,IAA5D,CACE,2DAAI,UAAAC,GAAG;AAAA,mBACL;AACET,yBAAW,EAAEA,WADf;AAEEC,0BAAY,EAAEA,YAFhB;AAGES,mBAAK,EAAED,GAAG,CAACE;AAHb,aADK;AAAA,WAAP,CADF,EAQEC,SARF,CASE,UAAAC,IAAI,EAAI;AACNC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,iBAAI,CAACG,MAAL,GAAcH,IAAd;AACD,WAZH;AAcD;;;;;;;;;;;;;;;;;;;;;ACvCH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA,QAAM1B,MAAM,GAAW,CAAC;AACpB8B,UAAI,EAAE,QADc;AACJC,eAAS,EAAE;AADP,KAAD,CAAvB;;QAkBaC,iB;;;;;;;;;;;;;;;;;;;ACGb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,U;;;;;;;;;;;;;;;;;;;AC5Bb;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzBnB,wBAAkB,EAAE,6CAFK;AAGzBC,oBAAc,EAAE,sBAHS;AAIzBmB,cAAQ,EAAE;AAJe,KAApB;;;;;;;;;;;;;;;;ACAP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYD,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyB,sBAAzB,CAAyC,4EAAzC,EACGE,KADH,CACS,UAAAC,GAAG;AAAA,aAAIX,OAAO,CAACY,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n    CommonModule\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<router-outlet></router-outlet>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'currency-simulator';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { SiteRoutingModule } from './modules/site/site-rounting.module';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { ApiPrefix } from './core/interceptors/api-prefix.interceptor';\nimport { SiteModule } from './modules/site/site.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    SiteRoutingModule,\n    CoreModule,\n    SiteModule\n  ],\n  exports: [\n\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiPrefix,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ApiPrefix } from './interceptors/api-prefix.interceptor';\n\n@NgModule({\n    imports: [\n      CommonModule,\n      RouterModule\n    ],\n    exports: [],\n    providers: [\n      \n    ],\n    declarations: []\n  })\n  export class CoreModule { }\n  ","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ApiPrefix implements HttpInterceptor {\n    intercept(\n        req: HttpRequest<any>,\n        next: HttpHandler,\n    ): Observable<HttpEvent<any>> {\n        const dupReq = req.clone({});\n        return next.handle(dupReq);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment'\nimport { Cambio } from '../models/cambio';\nimport { ConverterMoedasResult } from '../models/result/converter-moedas-result.component';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiCurrencyService {\n  cambio: Cambio\n\n  constructor(private http: HttpClient) { }\n\n  converterMoedas(moedaOrigem: string, moedaDestino: string): Observable<ConverterMoedasResult> {\n    return this.http.get<ConverterMoedasResult>(\n      `${environment.apiCurrencyEnpoint+moedaOrigem}_${moedaDestino}&compact=ultra&apiKey=${environment.apiCurrencyKey}`\n    )\n  }\n}\n","<table>\n    <tr>\n        <th>MOEDA ORIGEM</th>\n        <th>MOEDA DESTINO</th>\n        <th>VALOR</th>\n    </tr>\n    <tr>\n        <td>{{cambio?.moedaOrigem}}</td>\n        <td>{{cambio?.moedaDestino}}</td>\n        <td>{{cambio?.valor | currency: 'BRL'}}</td>\n    </tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { ApiCurrencyService } from 'src/app/core/services/api-currency.service';\nimport { Cambio } from 'src/app/core/models/cambio';\nimport { map } from 'rxjs/operators'\n\n@Component({\n  selector: 'app-cambio',\n  templateUrl: './cambio.component.html',\n  styleUrls: ['./cambio.component.scss']\n})\nexport class CambioComponent implements OnInit {\n  cambio: Cambio;\n\n  constructor(\n    public apiCurrency: ApiCurrencyService\n  ) { }\n\n  ngOnInit(): void {\n    this.converterMoedas('BRL', 'USD')\n  }\n\n  // converterMoedas(moedaOrigem: string, moedaDestino: string): void{\n  //   this.apiCurrency.converterMoedas(moedaOrigem, moedaDestino).subscribe(\n  //     res => {\n  //       console.log(res)\n  //     }\n  //   )\n  // }\n\n  converterMoedas(moedaOrigem: string, moedaDestino: string): void {\n    this.apiCurrency.converterMoedas(moedaOrigem, moedaDestino).pipe(\n      map(res => (\n        {\n          moedaOrigem: moedaOrigem,\n          moedaDestino: moedaDestino,\n          valor: res.BRL_USD\n        }\n      ))\n    ).subscribe(\n      item => {\n        console.log(item)\n        this.cambio = item\n      }\n    )\n  }\n}","import { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ApiPrefix } from 'src/app/core/interceptors/api-prefix.interceptor';\nimport { CambioComponent } from './pages/cambio/cambio.component';\n\nconst routes: Routes = [{\n    path: 'cambio', component: CambioComponent\n}];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes),\n        CommonModule\n    ],\n    exports: [RouterModule],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: ApiPrefix,\n            multi: true\n        }\n    ]\n})\nexport class SiteRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { SiteRoutingModule } from './site-rounting.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ApiPrefix } from 'src/app/core/interceptors/api-prefix.interceptor';\nimport { CambioComponent } from './pages/cambio/cambio.component';\n\n@NgModule({\n  declarations: [\n    CambioComponent\n  ],\n  imports: [\n    BrowserModule,\n    SiteRoutingModule\n  ],\n  exports: [\n\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiPrefix,\n      multi: true\n    }\n  ],\n  bootstrap: []\n})\n\nexport class SiteModule { }","export const environment = {\n  production: false,\n  apiCurrencyEnpoint: 'https://free.currconv.com/api/v7/convert?q=',\n  apiCurrencyKey: '766560c6f4db43a534db',\n  apiTeste: 'https://free.currconv.com/api/v7/convert?q=USD_BRL&compact=ultra&apiKey=766560c6f4db43a534db'\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}